#!/usr/bin/env bash
# Schleps settings and utilities to an SSH host or docker container.
# Copyright (c) 2020 Jason Jackson. MIT license.
# https://github.com/jakshin/schlep

function usage() {
	if [[ $1 == true ]]; then
		bright "Schleps settings and utilities to an SSH host or docker container\n\n"
	fi

	bright "Usage: "
	echo "$script_name [options] ssh-host-or-docker-container"
	echo "Options can be given before or after the SSH host / docker container"
	echo
	bright "Options:\n"
	echo "  -h, --help    Show this help and exit" | opt
	echo
	echo "  -a, --all     Install all the things" | opt
	echo "  -b, --basic   Install only basic settings (default)" | opt
	echo "  -f, --force   Install even if schlep's directory already exists on the remote host" | opt
	echo "  -q, --quiet   Install quietly (otherwise a bit of progress is shown)" | opt
	echo "  --uninstall   Uninstall schlep's files from the remote" | opt
	echo
	echo "  -d, --docker  The remote host is a docker container" | opt
	echo "  -s, --ssh     The remote host is an SSH server" | opt
	echo
	echo "  If neither of the above options is given, the remote host is assumed to be SSH"
	echo "  iff its name contains a dot; otherwise, it's assumed to be a docker container"
	echo
	echo "  --user=USER   The remote user to connect as (default = root)" | opt
	echo
	echo "  The user can also be given as part of the host name, like 'user@host'"
	echo
	echo "Additional options can be passed to docker, SSH, and rsync (used with SSH hosts),"
	echo "by exporting any or all of these environment variables:"
	echo '$SCHLEP_DOCKER_OPTS, $SCHLEP_DOCKER_CP_OPTS, $SCHLEP_DOCKER_EXEC_OPTS,' | var
	echo '$SCHLEP_SSH_OPTS, $SCHLEP_RSYNC_OPTS' | var
	exit
}

# Abort on any unexpected error
set -e

# Run from this script's directory
cd -- "$(dirname -- "$0")"

# Colors are nice
error='\033[38;5;160m'
bright='\033[1m'
normal='\033[0m'

function error() {
	echo -e "${error}${*}${normal}\n"
	usage
}

function bright() {
	echo -en "${bright}${*}${normal}"
}

function opt() {
	GREP_COLOR='1;37' grep -E --color=auto -- " -[a-zA-Z=-]+"
}

function var() {
	GREP_COLOR='1;37' grep -E --color=auto -- '\$[a-zA-Z_]+'
}

# Pre-parse the command line, to "explode" single-character options given together
declare -a args=()

for arg; do
	if [[ $arg == -* && $arg != --* && $arg != '-' ]]; then
		len=${#arg}
		for (( i=1; i < len; i++ )); do
			char="${arg:$i:1}"
			if [[ $char != [[:space:]] ]]; then
				args+=("-$char")
			fi
		done
	else
		args+=("$arg")
	fi
done

# Parse the command line
script_name="$(basename -- "$0")"
(( "${#args[@]}" > 0 )) || usage true

all_install_cmd='find "$HOME/.schlep" -name "install.sh" -exec {} \;'
basic_install_cmd='find "$HOME/.schlep" -path "*-settings/install.sh" -exec {} \;'
install_cmd="$basic_install_cmd"
force_install=false
quiet_install=false
uninstall=false

remote_host=""
remote_type=""
remote_user="root"

for arg in "${args[@]}"; do
	if [[ $arg == "-h" || $arg == "--help" ]]; then
		usage true

	elif [[ $arg == "-a" || $arg == "--all" ]]; then
		install_cmd="$all_install_cmd"
	elif [[ $arg == "-b" || $arg == "--basic" ]]; then
		install_cmd="$basic_install_cmd"
	elif [[ $arg == "-f" || $arg == "--force" ]]; then
		force_install=true
	elif [[ $arg == "-q" || $arg == "--quiet" ]]; then
		quiet_install=true
	elif [[ $arg == "--uninstall" ]]; then
		uninstall=true

	elif [[ $arg == "-d" || $arg == "--docker" ]]; then
		remote_type="docker"
	elif [[ $arg == "-s" || $arg == "--ssh" ]]; then
		remote_type="ssh"
	elif [[ $arg == "--user="* ]]; then
		remote_user="${arg/*=/}"

	elif [[ $arg == -* ]]; then
		error "Error: Invalid option: $arg"
	elif [[ -z $remote_host ]]; then
		remote_host="$arg"
	else
		error "Error: Invalid argument: $arg"
	fi
done

if [[ $remote_host == http://* || $remote_host == https://* ]]; then
	remote_host="$(echo "$remote_host" | grep -Eio "//([^/]+)/" | head -n 1)"
	remote_host="${remote_host///}"
fi

if [[ $remote_host == *@* ]]; then
	remote_user="${remote_host/@*/}"
	remote_host="${remote_host/*@/}"
fi

if [[ -z $remote_host || -z $remote_user ]]; then
	error "Error: Missing remote host or user\n"
fi

if [[ -z $remote_type ]]; then
	# Guess whether we should connect by SSH or docker exec
	[[ $remote_host == *.* ]] && remote_type="ssh" || remote_type="docker"
fi

SCHLEP_DOCKER_EXEC_OPTS="-it --user $remote_user $SCHLEP_DOCKER_EXEC_OPTS"

# Uninstall schlep from the remote, if that's what we're supposed to do
if [[ $uninstall == true ]]; then
	uninstall_cmd='find "$HOME/.schlep" -name "uninstall.sh" -exec {} \; && rm -rf "$HOME/.schlep"'

	if [[ $remote_type == "docker" ]]; then
		docker $SCHLEP_DOCKER_OPTS exec $SCHLEP_DOCKER_EXEC_OPTS "$remote_host" bash -c "$uninstall_cmd"
	elif [[ $remote_type == "ssh" ]]; then
		ssh -oStrictHostKeyChecking=no -T $SCHLEP_SSH_OPTS "$remote_user@$remote_host" "$uninstall_cmd"
	fi

# Otherwise, copy files and run install scripts if needed, then connect interactively
else
	if [[ $force_install == true ]]; then
		install=true
	else
		installed_cmd='[[ -d "$HOME/.schlep" ]] && echo -n false || echo -n true'

		if [[ $remote_type == "docker" ]]; then
			install="$(docker $SCHLEP_DOCKER_OPTS exec $SCHLEP_DOCKER_EXEC_OPTS "$remote_host" bash -c "$installed_cmd")"
			install="$(echo $install)"

		elif [[ $remote_type == "ssh" ]]; then
			install="$(ssh -oStrictHostKeyChecking=no -T $SCHLEP_SSH_OPTS "$remote_user@$remote_host" "$installed_cmd")"
		fi
	fi

	if [[ $remote_type == "docker" ]]; then
		# Install if we need to
		if [[ $install == true ]]; then
			[[ $remote_user == "root" ]] && base_path="/root" || base_path="/home/$remote_user"
			docker $SCHLEP_DOCKER_OPTS exec $SCHLEP_DOCKER_EXEC_OPTS "$remote_host" \
				bash -c 'mkdir -p "$HOME/.schlep" && echo -n '"$remote_host"' > "$HOME/.schlep/.host"'

			[[ $quiet_install == true ]] || echo "Schlepping files..."

			for thing in *; do
				if [[ $thing != "bin" && $thing != "LICENSE" && $thing != "README.md" ]]; then
					docker $SCHLEP_DOCKER_OPTS cp $SCHLEP_DOCKER_CP_OPTS "$thing" "$remote_host:$base_path/.schlep"
				fi
			done

			docker $SCHLEP_DOCKER_OPTS exec $SCHLEP_DOCKER_EXEC_OPTS "$remote_host" \
				bash -c 'chown -R --reference="$HOME" "$HOME/.schlep"'

			[[ $quiet_install == true ]] || echo "Installing..."
			docker $SCHLEP_DOCKER_OPTS exec $SCHLEP_DOCKER_EXEC_OPTS "$remote_host" bash -c "$install_cmd"
		fi

		# Connect interactively
		exec docker $SCHLEP_DOCKER_OPTS exec $SCHLEP_DOCKER_EXEC_OPTS "$remote_host" bash

	elif [[ $remote_type == "ssh" ]]; then
		# Install if we need to
		if [[ $install == true ]]; then
			[[ $quiet_install == true ]] || echo "Schlepping files..."
			rsync -DlpqRrtu --exclude=".git" --exclude="bin" --exclude="LICENSE" --exclude="/README.md" \
				$SCHLEP_RSYNC_OPTS ./ "$remote_user@$remote_host:~/.schlep"

			ssh -oStrictHostKeyChecking=no -T $SCHLEP_SSH_OPTS "$remote_user@$remote_host" \
				"echo -n $remote_host > \"\$HOME/.schlep/.host\""

			[[ $quiet_install == true ]] || echo "Installing..."
			ssh -T $SCHLEP_SSH_OPTS "$remote_user@$remote_host" "$install_cmd"
		fi

		# Connect interactively
		exec ssh -t $SCHLEP_SSH_OPTS "$remote_user@$remote_host"
	fi
fi
